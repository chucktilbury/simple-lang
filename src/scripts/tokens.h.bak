/* generated file. DO NOT EDIT */
#ifndef _TOKENS_H
#define _TOKENS_H

typedef enum {
    NAMESPACE = 1000,
    CLASS,
    CREATE,
    DESTROY,
    IF,
    ELSE,
    WHILE,
    DO,
    FOR,
    IN,
    TO,
    AS,
    TRY,
    EXCEPT,
    RAISE,
    RETURN,
    EXIT,
    SWITCH,
    CASE,
    YIELD,
    TRACE,
    PRINT,
    IMPORT,
    TRUE,
    FALSE,
    BREAK,
    CONTINUE,
    IBEGIN,
    IEND,
    ENTRY,
    MODULE,
    DEFAULT,
    DOT,
    COMMA,
    COLON,
    CPAREN,
    OPAREN,
    OBLOCK,
    CBLOCK,
    OBRACE,
    CBRACE,
    SYMBOL,
    STRG_CONST,
    FLOAT_CONST,
    INT_CONST,
    UNSIGNED_CONST,
    PUBLIC,
    PRIVATE,
    PROTECTED,
    INTEGER,
    UNSIGNED,
    FLOAT,
    STRING,
    DICT,
    LIST,
    BOOLEAN,
    NOTHING,
    EXEC,
    STATIC,
    DYNAMIC,
    ASSIGN,
    ADD,
    SUB,
    MUL,
    DIV,
    MOD,
    POW,
    NOT,
    OR,
    AND,
    EQU,
    NEQU,
    LORE,
    GORE,
    ADD_ASSIGN,
    SUB_ASSIGN,
    MUL_ASSIGN,
    DIV_ASSIGN,
    MOD_ASSIGN,
    LESS,
    MORE,
} token_t;

typedef struct {
    token_t type;
    const char* str;
    const char* name;
} token_value_t = {
    {NAMESPACE, "", ""},    {CLASS, "", ""},    {CREATE, "", ""},    {DESTROY, "", ""},    {IF, "", ""},    {ELSE, "", ""},    {WHILE, "", ""},    {DO, "", ""},    {FOR, "", ""},    {IN, "", ""},    {TO, "", ""},    {AS, "", ""},    {TRY, "", ""},    {EXCEPT, "", ""},    {RAISE, "", ""},    {RETURN, "", ""},    {EXIT, "", ""},    {SWITCH, "", ""},    {CASE, "", ""},    {YIELD, "", ""},    {TRACE, "", ""},    {PRINT, "", ""},    {IMPORT, "", ""},    {TRUE, "", ""},    {FALSE, "", ""},    {BREAK, "", ""},    {CONTINUE, "", ""},    {IBEGIN, "", ""},    {IEND, "", ""},    {ENTRY, "", ""},    {MODULE, "", ""},    {DEFAULT, "", ""},    {DOT, "", ""},    {COMMA, "", ""},    {COLON, "", ""},    {CPAREN, "", ""},    {OPAREN, "", ""},    {OBLOCK, "", ""},    {CBLOCK, "", ""},    {OBRACE, "", ""},    {CBRACE, "", ""},    {SYMBOL, "", ""},    {STRG_CONST, "", ""},    {FLOAT_CONST, "", ""},    {INT_CONST, "", ""},    {UNSIGNED_CONST, "", ""},    {PUBLIC, "", ""},    {PRIVATE, "", ""},    {PROTECTED, "", ""},    {INTEGER, "", ""},    {UNSIGNED, "", ""},    {FLOAT, "", ""},    {STRING, "", ""},    {DICT, "", ""},    {LIST, "", ""},    {BOOLEAN, "", ""},    {NOTHING, "", ""},    {EXEC, "", ""},    {STATIC, "", ""},    {DYNAMIC, "", ""},    {ASSIGN, "", ""},    {ADD, "", ""},    {SUB, "", ""},    {MUL, "", ""},    {DIV, "", ""},    {MOD, "", ""},    {POW, "", ""},    {NOT, "", ""},    {OR, "", ""},    {AND, "", ""},    {EQU, "", ""},    {NEQU, "", ""},    {LORE, "", ""},    {GORE, "", ""},    {ADD_ASSIGN, "", ""},    {SUB_ASSIGN, "", ""},    {MUL_ASSIGN, "", ""},    {DIV_ASSIGN, "", ""},    {MOD_ASSIGN, "", ""},    {LESS, "", ""},    {MORE, "", ""},};

#endif /* _TOKENS_H */

